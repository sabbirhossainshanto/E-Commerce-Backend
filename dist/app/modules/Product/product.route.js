"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.productRoute = void 0;
const express_1 = require("express");
const auth_1 = __importDefault(require("../../../utils/auth"));
const client_1 = require("@prisma/client");
const product_controller_1 = require("./product.controller");
const fileUploader_1 = require("../../../utils/fileUploader");
const parseRequest_1 = __importDefault(require("../../../utils/parseRequest"));
const validateRequest_1 = __importDefault(require("../../../utils/validateRequest"));
const product_validation_1 = require("./product.validation");
const router = (0, express_1.Router)();
router.post("/create-product", (0, auth_1.default)(client_1.Role.VENDOR), fileUploader_1.fileUploader.uploadMultiple, parseRequest_1.default, (0, validateRequest_1.default)(product_validation_1.productValidation.createProduct), product_controller_1.productController.createProduct);
router.get("/", product_controller_1.productController.getAllProduct);
router.get("/my-products", (0, auth_1.default)(client_1.Role.VENDOR), product_controller_1.productController.getMyProducts);
router.get("/:productId", product_controller_1.productController.getSingleProduct);
router.patch("/:productId", (0, auth_1.default)(client_1.Role.VENDOR, client_1.Role.ADMIN), fileUploader_1.fileUploader.uploadMultiple, parseRequest_1.default, (0, validateRequest_1.default)(product_validation_1.productValidation.updateProduct), product_controller_1.productController.updateSingleProduct);
router.delete("/:productId", (0, auth_1.default)(client_1.Role.VENDOR, client_1.Role.ADMIN), product_controller_1.productController.deleteSingleProduct);
exports.productRoute = router;
